

getValue$: (ValueObservable<T>) => T;


Graph {
    message: MessageGraph
        get$(id) -> ValueObservable<MessageModel | null>
        actionMuteSounds(id) => void

    Thread
        get$(id) -> ValueObservable<ThreadModel | null>

    Wall
        actionAddAttachemnt: (id, data) => void,
        actionRemoveAttachemnt: (id) => Promise<void>,

}

GraphBind
    _getValue$                      - ten obiekt nie musi przechowywać tej wartości

    message: MessageGraphBind
    thread: ThreadGraphBind
    wall: WallGraphBind
    getValue$ ---> _getValue$           po to żeby można było sobie przypiąć dowlonystrumień z wewnętrzengo stanu



bindowanie, obwywa się na poziomie gettera, wtedy tworzony jest nowy obiekt opakowujący

GraphBind
    _graph
    get message() MessageGraphBind {
        return MessageGraphBind.bind(this._graph.messages, $getValue);
    }

    get thread(): ThreadGraphBind {
        return ThreadGraphBind.bind(this._graph.thread, $getValue);
    }
}


MessageGraph {
    get(id) => ValueObservable<MessageModel | null>,
    actionMuteSounds(id) => void
    bind(getValue$, this) => MessageGraphBinded
}

class MessageGraphBinded {
    _messageGraph : MessageGraph;
    _getValue$

    get(id) => MessageModel | null,
    actionMuteSounds(id) => void

    _getValue$: (ValueObservable<T>) => T;

    get(id) = (id: string): MessageModel | null => {
        return this._getValue$(this._messageGraph.get$(id));
    }

    actionMuteSounds(id) => void {
        return this._messageGraph.actionMuteSounds(id);
    }
}






/*
this.cat = this.db.object('/cats/-KpRuC...Id')
this.dog = this.db.object('/dogs/-KpRuD...Id')
this.dogs = this.db.list('/dogs')

https://gist.github.com/deltaepsilon/b9ac6bdb5d30b1e4203ae3b2f6e2cd07#file-rxjs-firebase-demo-js
*/


/*
        const userId = "3121";
        const name = "name111";
        const email = "sdaasda";
        const imageUrl = "http://wwaw.psdasda";

        firebase.database().ref('users/' + userId).set({
            username: name,
            email: email,
            profile_picture : imageUrl
        });
*/